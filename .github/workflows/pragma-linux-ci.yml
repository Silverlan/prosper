name: Build Linux
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: environment-lin-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
            name: "Ubuntu GCC-11"
            artifact: "ubuntu_gcc.7z"
            build_type: "RelWithDebInfo"
            cc: "clang-14"
            cxx: "clang++-14"
            archiver: "7z a"
            generators: "Unix Makefiles"
            build_dir: 'build'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup
        id: setup
        uses: Silverlan/common_actions/setup@main
          
      - name: Download binaries
        uses: Silverlan/common_actions/download_build_binaries@main
        continue-on-error: true
        
      - name: Build
        id: build
        uses: Silverlan/prosper/github_actions/build@master
        with:
          repo-directory: '.'

      - name: Create Release Files
        shell: bash
        run: |
          mkdir release
          rsync --mkpath --links build/third_party_libs/zlib/libz.so release/
          rsync --mkpath --links build/third_party_libs/libpng/libpng.so release/
          rsync --mkpath --links build/third_party_libs/libpng/libpng16.so release/
          rsync --mkpath --links build/third_party_libs/libpng/libpng16.so.16 release/
          rsync --mkpath iglfw/build/glfw/src/libglfw.so release/
          rsync --mkpath util_image/build/libutil_image.so release/
          rsync --mkpath build/external_libs/sharedutils/libsharedutils.so release/
          rsync --mkpath iglfw/build/libiglfw.so release/
          rsync --mkpath build/external_libs/vfilesystem/libvfilesystem.so release/
          rsync --mkpath build/external_libs/mathutil/libmathutil.so release/
          rsync --mkpath build/libprosper.so release/
          
      - name: Release Binaries
        uses: Silverlan/common_actions/release_nightly_binaries@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}

      - name: Handle Error
        uses: Silverlan/common_actions/action_handle_error@main
        if: failure()
